/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-5xl: 64rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --radius-sm: 0.25rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --perspective-distant: 1200px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-purple-primary: #8a2bff;
    --color-purple-93: #9356de;
    --color-purple-5c: #5c15b3;
    --color-light-purple: rgba(194, 145, 255, 1);
    --color-gray-02: rgba(2, 2, 2, 1);
    --color-gray-a6: rgba(166, 166, 166, 1);
    --color-gray-07: rgba(7, 7, 7, 1);
    --color-gray-04: rgba(4, 4, 4, 1);
    --color-gray-06: rgba(6, 4, 7, 1);
    --font-inter: "Inter", sans-serif;
    --custom-transform: translate(-50%, -50%);
    --logo-transform: rotateY(180deg) rotateZ(26deg);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-7 {
    top: calc(var(--spacing) * 7);
  }
  .top-\[-5\%\] {
    top: -5%;
  }
  .top-\[-7\%\] {
    top: -7%;
  }
  .top-\[-60\%\] {
    top: -60%;
  }
  .top-\[-70\%\] {
    top: -70%;
  }
  .top-\[-72\%\] {
    top: -72%;
  }
  .top-\[-80\%\] {
    top: -80%;
  }
  .top-\[-90\%\] {
    top: -90%;
  }
  .top-\[-100\%\] {
    top: -100%;
  }
  .top-\[3\.8\%\] {
    top: 3.8%;
  }
  .top-\[10\%\] {
    top: 10%;
  }
  .top-\[14\.2\%\] {
    top: 14.2%;
  }
  .top-\[15\%\] {
    top: 15%;
  }
  .top-\[24px\] {
    top: 24px;
  }
  .top-\[30px\] {
    top: 30px;
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .top-\[57\.5\%\] {
    top: 57.5%;
  }
  .top-\[59px\] {
    top: 59px;
  }
  .right-7 {
    right: calc(var(--spacing) * 7);
  }
  .right-\[-3\%\] {
    right: -3%;
  }
  .right-\[-16\%\] {
    right: -16%;
  }
  .right-\[-98\%\] {
    right: -98%;
  }
  .right-\[-100\%\] {
    right: -100%;
  }
  .right-\[25\%\] {
    right: 25%;
  }
  .bottom-\[-20\%\] {
    bottom: -20%;
  }
  .bottom-\[-30\%\] {
    bottom: -30%;
  }
  .bottom-\[-35\%\] {
    bottom: -35%;
  }
  .bottom-\[-40\%\] {
    bottom: -40%;
  }
  .bottom-\[-65\%\] {
    bottom: -65%;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[-2\.3\%\] {
    left: -2.3%;
  }
  .left-\[-16\%\] {
    left: -16%;
  }
  .left-\[-24\%\] {
    left: -24%;
  }
  .left-\[-75\%\] {
    left: -75%;
  }
  .left-\[-80\%\] {
    left: -80%;
  }
  .left-\[-85\%\] {
    left: -85%;
  }
  .left-\[20\.8\%\] {
    left: 20.8%;
  }
  .left-\[27\%\] {
    left: 27%;
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .left-\[54\.6\%\] {
    left: 54.6%;
  }
  .left-\[55\.8\%\] {
    left: 55.8%;
  }
  .left-\[64\.5\%\] {
    left: 64.5%;
  }
  .left-\[69\.1\%\] {
    left: 69.1%;
  }
  .left-\[88\.5\%\] {
    left: 88.5%;
  }
  .-z-10 {
    z-index: calc(10 * -1);
  }
  .-z-20 {
    z-index: calc(20 * -1);
  }
  .-z-30 {
    z-index: calc(30 * -1);
  }
  .-z-\[1\] {
    z-index: calc(1 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 1440px) {
      max-width: 1440px;
    }
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-13 {
    margin-top: calc(var(--spacing) * 13);
  }
  .mt-\[85px\] {
    margin-top: 85px;
  }
  .mt-\[109px\] {
    margin-top: 109px;
  }
  .mr-auto {
    margin-right: auto;
  }
  .mb-\[66px\] {
    margin-bottom: 66px;
  }
  .mb-\[130px\] {
    margin-bottom: 130px;
  }
  .ml-18 {
    margin-left: calc(var(--spacing) * 18);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .h-\[344px\] {
    height: 344px;
  }
  .h-full {
    height: 100%;
  }
  .h-max {
    height: max-content;
  }
  .max-h-14 {
    max-height: calc(var(--spacing) * 14);
  }
  .max-h-\[344px\] {
    max-height: 344px;
  }
  .w-\[52px\] {
    width: 52px;
  }
  .w-\[300px\] {
    width: 300px;
  }
  .w-\[353px\] {
    width: 353px;
  }
  .w-\[735px\] {
    width: 735px;
  }
  .w-\[978px\] {
    width: 978px;
  }
  .w-\[2238px\] {
    width: 2238px;
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-14 {
    max-width: calc(var(--spacing) * 14);
  }
  .max-w-360 {
    max-width: calc(var(--spacing) * 360);
  }
  .max-w-\[46px\] {
    max-width: 46px;
  }
  .max-w-\[51px\] {
    max-width: 51px;
  }
  .max-w-\[203px\] {
    max-width: 203px;
  }
  .max-w-\[294px\] {
    max-width: 294px;
  }
  .max-w-\[441px\] {
    max-width: 441px;
  }
  .max-w-\[448px\] {
    max-width: 448px;
  }
  .max-w-\[460px\] {
    max-width: 460px;
  }
  .max-w-\[468px\] {
    max-width: 468px;
  }
  .max-w-\[483px\] {
    max-width: 483px;
  }
  .max-w-\[588px\] {
    max-width: 588px;
  }
  .max-w-\[668px\] {
    max-width: 668px;
  }
  .max-w-\[695px\] {
    max-width: 695px;
  }
  .max-w-\[735px\] {
    max-width: 735px;
  }
  .max-w-\[978px\] {
    max-width: 978px;
  }
  .max-w-\[1640px\] {
    max-width: 1640px;
  }
  .max-w-\[2238px\] {
    max-width: 2238px;
  }
  .transform-\(--custom-transform\) {
    transform: var(--custom-transform);
  }
  .transform-\(--logo-transform\) {
    transform: var(--logo-transform);
  }
  .transform-\[rotateZ\(28deg\)\] {
    transform: rotateZ(28deg);
  }
  .transform-\[rotateZ\(180deg\)\] {
    transform: rotateZ(180deg);
  }
  .transform-\[translate\(-50\%\)\] {
    transform: translate(-50%);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-4\.5 {
    gap: calc(var(--spacing) * 4.5);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-\[10px\] {
    gap: 10px;
  }
  .gap-x-13 {
    column-gap: calc(var(--spacing) * 13);
  }
  .gap-y-8 {
    row-gap: calc(var(--spacing) * 8);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[2px\] {
    border-radius: 2px;
  }
  .rounded-\[6px\] {
    border-radius: 6px;
  }
  .rounded-\[8px\] {
    border-radius: 8px;
  }
  .rounded-\[12px\] {
    border-radius: 12px;
  }
  .rounded-\[16px\] {
    border-radius: 16px;
  }
  .rounded-\[100px\] {
    border-radius: 100px;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-\[\#8752C6\] {
    border-color: #8752C6;
  }
  .border-black {
    border-color: var(--color-black);
  }
  .border-gray-07 {
    border-color: var(--color-gray-07);
  }
  .border-white {
    border-color: var(--color-white);
  }
  .border-white\/12 {
    border-color: color-mix(in srgb, #fff 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 12%, transparent);
    }
  }
  .border-white\/24 {
    border-color: color-mix(in srgb, #fff 24%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 24%, transparent);
    }
  }
  .border-white\/40 {
    border-color: color-mix(in srgb, #fff 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-gray-02 {
    background-color: var(--color-gray-02);
  }
  .bg-gray-04 {
    background-color: var(--color-gray-04);
  }
  .bg-gray-06 {
    background-color: var(--color-gray-06);
  }
  .bg-gray-07 {
    background-color: var(--color-gray-07);
  }
  .bg-purple-primary {
    background-color: var(--color-purple-primary);
  }
  .bg-purple-primary\/12 {
    background-color: color-mix(in srgb, #8a2bff 12%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-purple-primary) 12%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .bg-linear-to-b {
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-none {
    background-image: none;
  }
  .from-\[\#9356DE\] {
    --tw-gradient-from: #9356DE;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-purple-93 {
    --tw-gradient-from: var(--color-purple-93);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#5C15B3\] {
    --tw-gradient-to: #5C15B3;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-purple-5c {
    --tw-gradient-to: var(--color-purple-5c);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-5\.5 {
    padding: calc(var(--spacing) * 5.5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-\[25px\] {
    padding: 25px;
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-4\.5 {
    padding-inline: calc(var(--spacing) * 4.5);
  }
  .px-13\.5 {
    padding-inline: calc(var(--spacing) * 13.5);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-\[9px\] {
    padding-block: 9px;
  }
  .py-\[14px\] {
    padding-block: 14px;
  }
  .py-\[66\.5px\] {
    padding-block: 66.5px;
  }
  .py-\[68px\] {
    padding-block: 68px;
  }
  .pt-71\.5 {
    padding-top: calc(var(--spacing) * 71.5);
  }
  .pt-\[25px\] {
    padding-top: 25px;
  }
  .pb-12 {
    padding-bottom: calc(var(--spacing) * 12);
  }
  .pb-15\.5 {
    padding-bottom: calc(var(--spacing) * 15.5);
  }
  .pl-\[54px\] {
    padding-left: 54px;
  }
  .text-center {
    text-align: center;
  }
  .text-right {
    text-align: right;
  }
  .font-inter {
    font-family: var(--font-inter);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-\[32px\] {
    font-size: 32px;
  }
  .text-\[42px\] {
    font-size: 42px;
  }
  .leading-\[110\%\] {
    --tw-leading: 110%;
    line-height: 110%;
  }
  .leading-\[125\%\] {
    --tw-leading: 125%;
    line-height: 125%;
  }
  .leading-\[130\%\] {
    --tw-leading: 130%;
    line-height: 130%;
  }
  .leading-\[150\%\] {
    --tw-leading: 150%;
    line-height: 150%;
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-\[-0\.02em\] {
    --tw-tracking: -0.02em;
    letter-spacing: -0.02em;
  }
  .tracking-\[-0\.04em\] {
    --tw-tracking: -0.04em;
    letter-spacing: -0.04em;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-black\/20 {
    color: color-mix(in srgb, #000 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-black) 20%, transparent);
    }
  }
  .text-gray-a6 {
    color: var(--color-gray-a6);
  }
  .text-light-purple {
    color: var(--color-light-purple);
  }
  .text-purple-primary {
    color: var(--color-purple-primary);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/25 {
    color: color-mix(in srgb, #fff 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 25%, transparent);
    }
  }
  .text-white\/30 {
    color: color-mix(in srgb, #fff 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .text-white\/50 {
    color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .opacity-50 {
    opacity: 50%;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .perspective-distant {
    perspective: var(--perspective-distant);
  }
  .hover\:bg-gray-06 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-06);
      }
    }
  }
  .hover\:bg-white\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
        }
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:text-white\/90 {
    &:hover {
      @media (hover: hover) {
        color: color-mix(in srgb, #fff 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--color-white) 90%, transparent);
        }
      }
    }
  }
  .\31 440px\:left-\[19\%\] {
    @media (width >= 1440px) {
      left: 19%;
    }
  }
  .\31 440px\:left-\[35\.8\%\] {
    @media (width >= 1440px) {
      left: 35.8%;
    }
  }
  .\31 440px\:flex {
    @media (width >= 1440px) {
      display: flex;
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:gap-0 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 0);
    }
  }
  .lg\:border {
    @media (width >= 64rem) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .lg\:border-white\/24 {
    @media (width >= 64rem) {
      border-color: color-mix(in srgb, #fff 24%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 24%, transparent);
      }
    }
  }
  .lg\:bg-\[\#060407\] {
    @media (width >= 64rem) {
      background-color: #060407;
    }
  }
  .lg\:px-4\.5 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4.5);
    }
  }
  .lg\:py-3 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 3);
    }
  }
  .lg\:text-base {
    @media (width >= 64rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
  .xl\:h-auto {
    @media (width >= 80rem) {
      height: auto;
    }
  }
  .xl\:max-w-\[776px\] {
    @media (width >= 80rem) {
      max-width: 776px;
    }
  }
  .xl\:flex-row {
    @media (width >= 80rem) {
      flex-direction: row;
    }
  }
  .xl\:gap-17 {
    @media (width >= 80rem) {
      gap: calc(var(--spacing) * 17);
    }
  }
  .xl\:text-\[56px\] {
    @media (width >= 80rem) {
      font-size: 56px;
    }
  }
  .\32 xl\:left-\[-1\.4\%\] {
    @media (width >= 96rem) {
      left: -1.4%;
    }
  }
  .\32 xl\:left-\[21\.3\%\] {
    @media (width >= 96rem) {
      left: 21.3%;
    }
  }
  .\32 xl\:left-\[87\.8\%\] {
    @media (width >= 96rem) {
      left: 87.8%;
    }
  }
  .\32 xl\:p-0 {
    @media (width >= 96rem) {
      padding: calc(var(--spacing) * 0);
    }
  }
}
* {
  font-family: "Roboto", sans-serif;
  box-sizing: border-box;
}
.customBorder {
  position: relative;
  box-sizing: border-box;
  transition: all 0.5s ease-in-out;
}
.customBorder:hover {
  background: linear-gradient(to bottom, #9356dec1 0%, #5c15b3d6 100%);
}
.customBorder::before {
  content: "";
  top: -1px;
  right: -1px;
  left: -1px;
  bottom: -1px;
  background: linear-gradient(to bottom, rgba(223, 205, 245, 1) 0%, rgba(135, 83, 198, 1) 100%);
  border-radius: 12px;
  position: absolute;
  z-index: -1;
}
.backdrop {
  top: 0;
  left: 0;
  z-index: 1;
  background-color: #0a0a0a71;
  position: fixed;
  width: 100vw;
  height: 100vh;
  opacity: 0;
  transition: opacity 0.5s ease-in-out;
}
.backdrop.active {
  opacity: 1;
}
#mobileMenuContent.active {
  right: 0;
}
.customBlockTransform {
  transform: perspective(800px) rotateX(-5deg) rotateY(2deg);
  transition: transform 0.3s ease-in-out;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 2px 2px 6px rgba(147, 86, 220, 0.2);
  border-radius: 12px;
  position: relative;
  overflow: hidden;
}
.customBlockTransform:hover {
  transform: perspective(800px) rotateX(0);
  box-shadow: 0 6px 16px rgba(147, 86, 220, 0.4);
}
.features_logo_block path {
  box-shadow: inset 0px 4px 24px rgb(255, 255, 255, 0.5);
}
.active>div>svg>path {
  stroke-opacity: 1;
}
.rotateCustom {
  position: relative;
  right: 60px;
  top: -90px;
  transform: rotate3d(-2, 1, 1, 43deg);
}
.scroll-container {
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 344px;
}
.scroll-track {
  display: flex;
  width: calc(2 * 100%);
  animation: scroll-left 20s linear infinite;
}
@keyframes scroll-left {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-50%);
  }
}
.scroll-item {
  flex-shrink: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
